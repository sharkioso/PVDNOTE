// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PVDNOTE.Backend.Infrastructure.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20250526195852_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<int>("PageId")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Blocks");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WorkSpaceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("WorkSpaceId");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.UserWorkSpace", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkSpaceId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "WorkSpaceId");

                    b.HasIndex("WorkSpaceId");

                    b.ToTable("UserWorkSpaces");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.WorkSpace", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("WorkSpaces");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.Block", b =>
                {
                    b.HasOne("PVDNOTE.Backend.Core.Entities.Page", "Page")
                        .WithMany("Blocks")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.Page", b =>
                {
                    b.HasOne("PVDNOTE.Backend.Core.Entities.WorkSpace", "WorkSpace")
                        .WithMany("Pages")
                        .HasForeignKey("WorkSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkSpace");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.UserWorkSpace", b =>
                {
                    b.HasOne("PVDNOTE.Backend.Core.Entities.User", "User")
                        .WithMany("UserWorkSpaces")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PVDNOTE.Backend.Core.Entities.WorkSpace", "WorkSpace")
                        .WithMany("UserWorkSpaces")
                        .HasForeignKey("WorkSpaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkSpace");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.Page", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.User", b =>
                {
                    b.Navigation("UserWorkSpaces");
                });

            modelBuilder.Entity("PVDNOTE.Backend.Core.Entities.WorkSpace", b =>
                {
                    b.Navigation("Pages");

                    b.Navigation("UserWorkSpaces");
                });
#pragma warning restore 612, 618
        }
    }
}
